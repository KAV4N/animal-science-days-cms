version: '3.8'

services:
  # Backend - Laravel
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laravel-app
    restart: unless-stopped
    volumes:
      - ./backend:/var/www/html:delegated
      - ./backend/vendor:/var/www/html/vendor:delegated
    networks:
      - app-network
    depends_on:
      - database

  # Frontend - Vue
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: vue-app
    restart: unless-stopped
    volumes:
      - ./frontend:/app:delegated
      - /app/node_modules
    ports:
      - "5173:5173" 
    networks:
      - app-network
    environment:
      - CHOKIDAR_USEPOLLING=true 
      - NODE_ENV=development

  # Nginx - Web Server
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./backend:/var/www/html:delegated
      - ./nginx/conf.d:/etc/nginx/conf.d
    networks:
      - app-network
    depends_on:
      - backend
      - frontend

  # MySQL - Database
  database:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data: